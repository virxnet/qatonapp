#!/bin/bash

# VirX Qaton Dev Helper
# by Antony Shan Peiris
# v0.1

if [ -f qaton.env ]; then 
    . qaton.env
else
    echo
    echo "Error: qaton.env file is missing"
    echo
    exit 1
fi

CURRENT_DIR=$(pwd)
PARENT_DIR=$(dirname "$CURRENT_DIR")
BASENAME=$(basename "$CURRENT_DIR")

usage() { 
    echo
    echo " *** VirX Qaton by Antony Shan Peiris *** "
    echo
    echo "Usage: $0 

    serve|start <http_port>  <...>      Serve application on http://localhost:<http_port>
                                        and optionally pass other arguments to the engine

    composer                            Execute composer commands within the development system

    bash <arguments>                    Open a bash shell within the development system                    

    <commands>                          Execute qpm commands within the development system

    help|-h|--help                      Prints this usage screen

    " 1>&2; exit 1; 
}

if [ "$DEFAULT_CONTAINER_ENGINE" == 'docker' ]; then
    docker info > /dev/null 2>&1
    if [ $? -ne 0 ] && [ "$1" != "help" ]; then
        echo
        echo "Fatal Error: Unable to detect Docker!"
        echo "Download Docker Desktop/Engine from https://docs.docker.com/get-docker"
        echo
        exit 1
    fi

    if [ "$1" == "serve" ] || [ "$1" == "start" ]; then
        if [ -z "$2" ]; then 
            HTTP_PORT=$DEFAULT_HTTP_PORT
        else
            HTTP_PORT=$2
        fi
        
        HTTP_PORT_ASSIGNMENT="-p $HTTP_PORT:80"
        if [ -z "${@:3}" ]; then
            SERVE_ARGUMENTS=""
            echo 1
        else
            SERVE_ARGUMENTS="${@:3}"
            echo 2
        fi

        echo
        echo " *** Serve Qaton Application *** "
        echo

        echo "Cleaning Up..."
        CONTAINER_NAME="$DEFAULT_CONTAINER_LABEL"-"$BASENAME"-"$HTTP_PORT"
        docker stop /$CONTAINER_NAME
        if [ -f $DOCKER_CID ]; then 
            docker rm -v $(cat $DOCKER_CID) > /dev/null 2>&1
            rm $DOCKER_CID
        fi
        echo
        echo "Starting..."
        if docker run $HTTP_PORT_ASSIGNMENT $SERVE_ARGUMENTS -d --cidfile $DOCKER_CID --rm --hostname $CONTAINER_NAME --name $CONTAINER_NAME -v $(pwd):/var/www/ virxnet/qaton; then
            echo
            echo "Serving: http://localhost:$HTTP_PORT/"
            echo
            $0
        else 
            echo
            echo "Error: failed to serve application!"
            echo "       if the current port $HTTP_PORT is in use, try again:"
            echo "       ./qaton serve [PortNumber]"
            echo
        fi
    else
        if [ ! -f $DOCKER_CID ]; then 
            echo
            echo "Container ID not found. Did you run './qaton start' first?"
            echo
            exit 1
        fi 

        if [ "$1" == "composer" ]; then
            docker exec -it --workdir /var/www $(cat $DOCKER_CID) composer ${@:2}
        elif [ "$1" == "update" ]; then
            docker exec -it --workdir /var/www $(cat $DOCKER_CID) composer update
        elif [ "$1" == "install" ]; then
            docker exec -it --workdir /var/www $(cat $DOCKER_CID) composer install
        elif [ "$1" == "bash" ]; then
            docker exec -it --workdir /var/www $(cat $DOCKER_CID) bash ${@:2}
        elif [ "$1" == "help" ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
            usage
        else
            docker exec -it --workdir /var/www $(cat $DOCKER_CID) bash -c "if [ ! -d ./vendor ]; then composer install; fi"
            docker exec -it --workdir /var/www $(cat $DOCKER_CID) php qpm
            docker exec -it --workdir /var/www $(cat $DOCKER_CID) bash -c "export PATH=$PATH:/var/www; bash"
        fi

        if [ $? -ne 0 ]; then
            echo
            echo "Error: operations failed! Did you run './qaton start' first?"
            echo
            exit 1
        fi
    fi
else
    # TODO: Add support for other container engines
    echo
    echo "Error: Unknown container engine: $DEFAULT_CONTAINER_ENGINE"
    echo 
fi

exit 0
